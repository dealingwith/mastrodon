---
import type { MastodonPost } from "../types/mastodon";
import LinkPreview from './LinkPreview.astro';

interface Props {
  post: MastodonPost;
}

const { post } = Astro.props;

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit",
  });
}

function stripHtml(html: string) {
  return html.replace(/<[^>]*>/g, "");
}

function extractUrls(content: string): string[] {
  const urlRegex = /https?:\/\/[^\s<>"]+/gi;
  const matches = content.match(urlRegex) || [];
  // Remove duplicates and filter out image/media URLs
  return [...new Set(matches)].filter(url => 
    !url.match(/\.(jpg|jpeg|png|gif|webp|mp4|mp3|wav|pdf)$/i)
  );
}

function cleanMastodonLinks(content: string): string {
  // Replace Mastodon's complex link structure with simple links
  return content.replace(
    /<a([^>]*?)><span class="invisible">([^<]*?)<\/span><span class="ellipsis">([^<]*?)<\/span><span class="invisible">([^<]*?)<\/span><\/a>/g,
    (match, attributes, start, middle, end) => {
      // Extract href from attributes
      const hrefMatch = attributes.match(/href="([^"]*?)"/);
      const href = hrefMatch ? hrefMatch[1] : '#';
      
      // Generic link icon and external arrow icon
      const linkIcon = '<svg class="inline w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.1m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/></svg>';
      const arrowIcon = '<svg class="inline w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/></svg>';
      
      // Create a clean domain display with icons
      try {
        const url = new URL(href);
        const domain = url.hostname.replace(/^www\./, '');
        return `<a${attributes}>${linkIcon}${domain}${arrowIcon}</a>`;
      } catch {
        return `<a${attributes}>${linkIcon}${middle}...${arrowIcon}</a>`;
      }
    }
  );
}

const urls = extractUrls(post.content);
const cleanContent = cleanMastodonLinks(post.content);
---

<article
  class="bg-white rounded-xl border border-orange-200 shadow-lg p-6 hover:shadow-xl hover:border-amber-300 transition-all duration-300"
>
  <header class="flex justify-between items-start mb-5">
    <div class="flex items-center space-x-4">
      <img
        src={post.account.avatar}
        alt={`${post.account.display_name} avatar`}
        class="w-14 h-14 rounded-full object-cover ring-2 ring-amber-200"
      />
      <div>
        <div class="font-bold text-stone-900 text-lg">
          {post.account.display_name}
        </div>
        <div class="text-stone-600 text-sm">@{post.account.username}</div>
      </div>
    </div>
    <time
      class="text-stone-500 text-sm whitespace-nowrap ml-4 bg-orange-50 px-3 py-1 rounded-full"
      datetime={post.created_at}
    >
      {formatDate(post.created_at)}
    </time>
  </header>

  {
    post.spoiler_text && (
      <div class="bg-amber-50 border border-amber-300 rounded-lg p-4 mb-5">
        <div class="text-amber-900">
          <strong class="font-bold">Content Warning:</strong>{" "}
          {post.spoiler_text}
        </div>
      </div>
    )
  }

  <div
    class="prose prose-stone max-w-none mb-5 text-stone-800 leading-relaxed"
    set:html={cleanContent}
  />

  {
    post.media_attachments && post.media_attachments.length > 0 && (
      <div class="mb-5 space-y-3">
        {post.media_attachments.map((media) =>
          media.type === "image" ? (
            <img
              src={media.url}
              alt={media.description || "Media attachment"}
              class="rounded-xl max-w-full h-auto border border-orange-200 shadow-md"
            />
          ) : (
            <a
              href={media.url}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center space-x-3 text-orange-700 hover:text-red-700 hover:underline bg-orange-50 px-4 py-2 rounded-lg border border-orange-200"
            >
              {media.type === "video" ? (
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
                  />
                </svg>
              ) : media.type === "audio" ? (
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"
                  />
                </svg>
              ) : (
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"
                  />
                </svg>
              )}
              <span class="font-medium">
                {media.description || `${media.type} attachment`}
              </span>
            </a>
          )
        )}
      </div>
    )
  }

  {urls.length > 0 && (
    <div class="mb-5 space-y-3">
      {urls.map((url) => (
        <LinkPreview url={url} />
      ))}
    </div>
  )}

  <footer
    class="flex space-x-8 text-stone-600 text-sm border-t border-orange-100 pt-4"
  >
    <span
      class="flex items-center space-x-2 hover:text-orange-700 transition-colors cursor-pointer"
    >
      <svg
        class="w-4 h-4"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
        ></path>
      </svg>
      <span class="font-medium">{post.replies_count}</span>
    </span>
    <span
      class="flex items-center space-x-2 hover:text-orange-700 transition-colors cursor-pointer"
    >
      <svg
        class="w-4 h-4"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
        ></path>
      </svg>
      <span class="font-medium">{post.reblogs_count}</span>
    </span>
    <span
      class="flex items-center space-x-2 hover:text-amber-600 transition-colors cursor-pointer"
    >
      <svg
        class="w-4 h-4"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
        ></path>
      </svg>
      <span class="font-medium">{post.favourites_count}</span>
    </span>
  </footer>
</article>

<style>
  /* Style links within post content */
  .prose a {
    color: #ea580c;
    font-weight: 500;
    text-decoration: underline;
    text-decoration-color: #fed7aa;
    transition: all 0.2s ease;
  }
  
  .prose a:hover {
    color: #dc2626;
    text-decoration-color: #ef4444;
  }
  
  
  /* Style mentions and hashtags */
  .prose a[href*="/tags/"]:not([href^="http"]) {
    color: #d97706;
    font-weight: 600;
    text-decoration: none;
    background-color: #fffbeb;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }
  
  .prose a[href*="/tags/"]:not([href^="http"]):hover {
    color: #ea580c;
    background-color: #fef3c7;
  }
  
  .prose a.mention {
    color: #ea580c;
    font-weight: 600;
    text-decoration: none;
    background-color: #fff7ed;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }
  
  .prose a.mention:hover {
    color: #dc2626;
    background-color: #fed7aa;
  }
</style>
