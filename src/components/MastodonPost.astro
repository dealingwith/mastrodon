---
import type { MastodonPost } from '../types/mastodon';

interface Props {
  post: MastodonPost;
}

const { post } = Astro.props;

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
}

function stripHtml(html: string) {
  return html.replace(/<[^>]*>/g, '');
}
---

<article class="bg-white rounded-lg border border-gray-200 shadow-sm p-6 hover:shadow-md transition-shadow">
  <header class="flex justify-between items-start mb-4">
    <div class="flex items-center space-x-3">
      <img src={post.account.avatar} alt={`${post.account.display_name} avatar`} class="w-12 h-12 rounded-full object-cover" />
      <div>
        <div class="font-semibold text-gray-900">{post.account.display_name}</div>
        <div class="text-gray-500 text-sm">@{post.account.username}</div>
      </div>
    </div>
    <time class="text-gray-500 text-sm whitespace-nowrap ml-4" datetime={post.created_at}>
      {formatDate(post.created_at)}
    </time>
  </header>

  {post.spoiler_text && (
    <div class="bg-yellow-50 border border-yellow-200 rounded-md p-3 mb-4">
      <div class="text-yellow-800">
        <strong class="font-semibold">Content Warning:</strong> {post.spoiler_text}
      </div>
    </div>
  )}

  <div class="prose prose-sm max-w-none mb-4 text-gray-800 leading-relaxed" set:html={post.content}></div>

  {post.media_attachments && post.media_attachments.length > 0 && (
    <div class="mb-4 space-y-2">
      {post.media_attachments.map((media) => (
        media.type === 'image' ? (
          <img 
            src={media.url} 
            alt={media.description || 'Media attachment'} 
            class="rounded-lg max-w-full h-auto border border-gray-200"
          />
        ) : (
          <a href={media.url} target="_blank" rel="noopener noreferrer" class="inline-flex items-center space-x-2 text-indigo-600 hover:text-indigo-800 hover:underline">
            <span class="text-lg">
              {media.type === 'video' ? '🎥' : media.type === 'audio' ? '🎵' : '📎'}
            </span>
            <span>{media.description || `${media.type} attachment`}</span>
          </a>
        )
      ))}
    </div>
  )}

  <footer class="flex space-x-6 text-gray-500 text-sm border-t border-gray-100 pt-3">
    <span class="flex items-center space-x-1">
      <span>💬</span>
      <span>{post.replies_count}</span>
    </span>
    <span class="flex items-center space-x-1">
      <span>🔄</span>
      <span>{post.reblogs_count}</span>
    </span>
    <span class="flex items-center space-x-1">
      <span>⭐</span>
      <span>{post.favourites_count}</span>
    </span>
  </footer>
</article>

